{
	"info": {
		"_postman_id": "35970416-5692-44c8-8be7-0d6e7c8cc7c4",
		"name": "rabbitmq-agent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Unknown DELETE Command",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST RPC method is success\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Response structure is right\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"})\r",
							"pm.test(\"Response is success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson.status).to.eql(\"error\");\r",
							"    pm.expect(responseJson.message).include(\"DELETE\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostUrl}}/mqtt/test/testdevice?h={{mqUrl}}&p={{mqPort}}&U={{default_user}}&P={{default_password}}",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"mqtt",
						"test",
						"testdevice"
					],
					"query": [
						{
							"key": "h",
							"value": "{{mqUrl}}",
							"description": "目標 MQTT 伺服器網址"
						},
						{
							"key": "p",
							"value": "{{mqPort}}",
							"description": "目標 MQTT 伺服器連接埠"
						},
						{
							"key": "U",
							"value": "{{default_user}}",
							"description": "目標 MQTT 伺服器帳戶"
						},
						{
							"key": "P",
							"value": "{{default_password}}",
							"description": "目標 MQTT 伺服器帳戶密碼"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register listener",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST RPC method is success\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Response structure is right\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{hostUrl}}/mqtt/test/testdevice?h={{mqUrl}}&p={{mqPort}}&U={{default_user}}&P={{default_password}}",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"mqtt",
						"test",
						"testdevice"
					],
					"query": [
						{
							"key": "h",
							"value": "{{mqUrl}}",
							"description": "目標 MQTT 伺服器網址"
						},
						{
							"key": "p",
							"value": "{{mqPort}}",
							"description": "目標 MQTT 伺服器連接埠"
						},
						{
							"key": "U",
							"value": "{{default_user}}",
							"description": "目標 MQTT 伺服器帳戶"
						},
						{
							"key": "P",
							"value": "{{default_password}}",
							"description": "目標 MQTT 伺服器帳戶密碼"
						},
						{
							"key": "w",
							"value": "20",
							"description": "偵聽等候時間，預設為 20 秒",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Published",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST RPC method is success\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Response structure is right\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"})\r",
							"pm.test(\"Response is success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson.status).to.eql(\"success\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"    pm.expect(responseJson.message).include(\"test/testdevice\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{'id':1, 'src':'mynewtopic', 'method':'Schedule.List'}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostUrl}}/mqtt/test/testdevice?h={{mqUrl}}&p={{mqPort}}&U={{default_user}}&P={{default_password}}",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"mqtt",
						"test",
						"testdevice"
					],
					"query": [
						{
							"key": "h",
							"value": "{{mqUrl}}",
							"description": "目標 MQTT 伺服器網址"
						},
						{
							"key": "p",
							"value": "{{mqPort}}",
							"description": "目標 MQTT 伺服器連接埠"
						},
						{
							"key": "U",
							"value": "{{default_user}}",
							"description": "目標 MQTT 伺服器帳戶"
						},
						{
							"key": "P",
							"value": "{{default_password}}",
							"description": "目標 MQTT 伺服器帳戶密碼"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscribe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET RPC method is success\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Response structure is right\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"})\r",
							"pm.test(\"Response is success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a(\"object\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"status\");\r",
							"    pm.expect(responseJson.status).to.eql(\"success\");\r",
							"    pm.expect(responseJson).haveOwnProperty(\"message\");\r",
							"    pm.expect(responseJson.message).include(\"test/testdevice\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostUrl}}/mqtt/test/testdevice?h={{mqUrl}}&p={{mqPort}}&U={{default_user}}&P={{default_password}}&subcmd=0",
					"host": [
						"{{hostUrl}}"
					],
					"path": [
						"mqtt",
						"test",
						"testdevice"
					],
					"query": [
						{
							"key": "h",
							"value": "{{mqUrl}}",
							"description": "目標 MQTT 伺服器網址"
						},
						{
							"key": "p",
							"value": "{{mqPort}}",
							"description": "目標 MQTT 伺服器連接埠"
						},
						{
							"key": "U",
							"value": "{{default_user}}",
							"description": "目標 MQTT 伺服器帳戶"
						},
						{
							"key": "P",
							"value": "{{default_password}}",
							"description": "目標 MQTT 伺服器帳戶密碼"
						},
						{
							"key": "subcmd",
							"value": "0",
							"description": "若為 \"1\" 使用 mosquitto_sub 來偵聽；若為 \"0\"，取得本地偵聽 log 內容；預設為 \"1\""
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}